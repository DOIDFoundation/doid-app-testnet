import{h as o,i as s,a as d}from"./index-9RxuMwHU.js";const r=[{symbol:"USDT",name:"Tether",networks:{"0x1":{contract:"",decimals:6},"0xdddd":{contract:"",decimals:6},"0xd01d":{contract:"",decimals:6},"0X38":{contract:"",decimals:18}},decimals:6,logoURI:"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png"},{symbol:"USDC",name:"USD Coin",networks:{"0x1":{contract:"",decimals:6},"0xdddd":{contract:"",decimals:6},"0xd01d":{contract:"",decimals:6},"0X38":{contract:"",decimals:18}},decimals:6,logoURI:"https://tokens.1inch.io/0xdac17f958d2ee523a2206206994597c13d831ec7.png"},{symbol:"ETH",name:"Ethereum",networks:{"0x1":{contract:"native",decimals:18},"0xdddd":{contract:"",decimals:18},"0xd01d":{contract:"",decimals:18},"0X38":{contract:"",decimals:18}},decimals:18,logoURI:""},{symbol:"DOID",name:"DOID",networks:{"0x1":{contract:"",decimals:18},"0xdddd":{contract:"native",decimals:18,name:"DOID testnet"},"0xd01d":{contract:"native",decimals:18,name:"DOID Mainnet"},"0X38":{contract:"",decimals:18}},decimals:18,logoURI:""}],m=async()=>{const a=(await o()).chainId,e=r.filter(t=>t.networks[a].contract).map(t=>Object.assign(t,t.networks[a],{balance:0})).sort((t,c)=>t.contract==="native"?-1:0),n=await s();if(n){const t=await d(n);e.forEach(c=>{c.contract==="native"&&(c.balance=t)})}return e};export{m as g};
